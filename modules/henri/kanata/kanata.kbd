;;==========================================================================;;
;;                                                                          ;;
;;  With Arsenik, choose the features you want for your keyboard:           ;;
;;  angle mods, Vim-like navigation layer, Mac/Azerty/Qwertz support, etc.  ;;
;;                                                                          ;;
;;==========================================================================;;

;; Every section is mandatory and should enable one and only one `include`
;; - enable each feature by un-commenting the related line.
;; - a commented line starts with ;;

;; Live-reload the configuration with Space+Backspace (requires layer-taps).

;; Timing variables for tap-hold effects.
(defvar
  ;; The key must be pressed twice in 200ms to enable repetitions.
  tap_timeout 200
  ;; The key must be held 200ms to become a layer shift.
  hold_timeout 200
  ;; Slightly higher value for typing keys, to prevent unexpected hold effect.
  long_hold_timeout 300
)

;;-----------------------------------------------------------------------------
;; Original key arrangement on your keyboard: Mac or PC.
;; Choose here if you want to add an angle mod: ZXCVB are shifted to the left.
;; See https://colemakmods.github.io/ergonomic-mods/angle.html for more details.

;;(include defsrc/pc.kbd)  ;; PC, standard finger assignment
;; (include defsrc/mac.kbd)  ;; Mac, standard finger assignment
;; (include defsrc/pc_anglemod.kbd)  ;; PC, ZXCVB are shifted to the left
;; angle-mod: the ISO key (a.k.a. LSGT or 102 key) becomes Z

(defsrc
  1    2    3    4    5  bspc   6    7    8    9    0
  q    w    e    r    t         y    u    i    o    p
  a    s    d    f    g         h    j    k    l    ;
  <    z    x    c    v    b    n    m    ,    .    /
            lalt          spc             ralt
)
;; (include defsrc/mac_anglemod.kbd)  ;; Mac, ZXCVB are shifted to the left
;; (include defsrc/pc_wide_anglemod.kbd)  ;; PC, angle-mod + right hand shifted by one key
;; (include defsrc/mac_wide_anglemod.kbd)  ;; Mac, angle-mod + right hand shifted by one key


;;-----------------------------------------------------------------------------
;; `Base` layer: standard or dual keys? (layer-taps, homerow mods?)
;; If you just want angle mod, you still have to enable the standard base.

;;(include deflayer/base.kbd)  ;; standard keyboard behavior
;; (include deflayer/base_lt.kbd)  ;; layer-taps on both thumb keys
;; Base layer: the 3 main thumb keys become mod/taps

(deflayer base
  _    _    _    _    _    _    _    _    _    _    _
  q    w    e    r    t         y    u    i    o    p
  a    s    d    f    g         h    j    k    l    ;
  z    x    c    v    b    <    n    m    ,    .    /
            @alt          @nav            @sym
)

;; Timing variables are defined in `kanata.kbd` file.

(defalias
  ;; Main mod-tap: Nav layer when held, Space when tapped.
  nav (tap-hold $tap_timeout $long_hold_timeout spc (layer-while-held navigation))

  ;; Space-cadet thumb keys: Alt/BackSpace, AltGr/Enter.
  ;; Acts as a modifier by default, or as BackSpace/Enter when tapped separately.
  alt (tap-hold-press $tap_timeout $hold_timeout bspc lalt)
  sym (tap-hold-press $tap_timeout $hold_timeout ret (layer-while-held symbols))
)

;; (include deflayer/base_lt_hrm.kbd)  ;; layer-taps + home-row mods

;; Note: not enabling layer-taps here makes the rest of the file useless.


;;-----------------------------------------------------------------------------
;; `Symbols` layer

;;(include deflayer/symbols_noop.kbd)  ;; AltGr stays as-is
;; (include deflayer/symbols_lafayette.kbd)  ;; AltGr programmation layer like Ergo‑L
;; (include deflayer/symbols_noop_num.kbd)  ;; AltGr stays as-is + NumRow layers
;; (include deflayer/symbols_lafayette_num.kbd)  ;; AltGr prog layer + NumRow layers
;; Symbol layer: Lafayette/Ergo‑L AltGr programmation layer
;; but enables a NumRow.

(deflayer symbols
  AG-1 AG-2 AG-3 AG-4 AG-5 XX   AG-6 AG-7 AG-8 AG-9 AG-0
  @^   @<   @>   @$   @%        @@   @&   @*   @'   @`
  @{   @pl  @pr  @}   @=        @\   @+   @-   @/   @''
  @~   @[   @]   @_   @#   XX   @|   @!   @;   @:   @?
            @num          spc             _
)

;; Numrow layer

(deflayer numrow
  _    _    _    _    _     _   _    _    _    _    _
  @s1  @s2  @s3  @s4  @s5       @s6  @s7  @s8  @s9  @s0
  @1   @2   @3   @4   @5        @6   @7   @8   @9   @0
  @dk1 @dk2 @dk3 @dk4 @dk5  _   XX   @-   @,   @.   @/
            _              @nbs           @sym
)

(defalias
  num (layer-toggle numrow)
)

;;-----------------------------------------------------------------------------
;; `Navigation` layer: ESDF or HJKL?

;;(include deflayer/navigation.kbd)  ;; ESDF on the left, NumPad on the right
;; (include deflayer/navigation_vim.kbd)  ;; HJKL + NumPad on [Space]+[Q]
;; Vim-Navigation layer:
;;  - right: Vim-like arrows on HJKL, home/end page up/down, mouse scroll
;;  - left: one-hand shortcuts (Cmd/Ctrl-WASZXCV), Tab/Shift-Tab, prev/next
;;  - top: Super-num (i3/sway) or Alt-num (browser), zoom in/out

;; The `lrld` action stands for "live reload". This will re-parse everything
;; except for linux-dev, i.e. you cannot live reload and switch keyboard devices.

(deflayer navigation
  M-1  M-2  M-3  M-4  M-5  lrld M-6  M-7  M-8  M-9  M-0
  @pad @cls bck  fwd  XX        home pgdn pgup end  @run
  @all @sav S-tab tab XX        lft  down up   rght @fun
  @ndo @cut @cpy @pst XX    _   @mwl @mwd @mwu @mwr XX
            del             _             esc
)

;; NumPad
(deflayer numpad
  _    _    _    _    _     _   _    _    _    _    _
  XX   home up   end  pgup      @/   @7   @8   @9   XX
  XX   lft  down rght pgdn      @-   @4   @5   @6   @0
  XX   XX   XX   XX   XX    _   @,   @1   @2   @3   @.
            @std           @nbs           @std
)

;; function keys
(deflayer funpad
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  f1   f2   f3   f4   XX        XX   XX   XX   XX   XX
  f5   f6   f7   f8   XX        XX   lctl lalt lmet _
  f9   f10  f11  f12  XX   XX   XX   XX   XX   XX   XX
            _               _             _
)

(defalias
  std (layer-switch base)
  pad (layer-switch numpad)

  fun (layer-while-held funpad)

  ;; Mouse wheel emulation
  mwu (mwheel-up    50 120)
  mwd (mwheel-down  50 120)
  mwl (mwheel-left  50 120)
  mwr (mwheel-right 50 120)
)

;; Replace XX by the keyboard shortcut of your application launcher, if any.
;; Mapped on [Space]+[P] in both navigation layers.

;; (defalias run M-p)  ;; [Command]-[P]
(defalias run XX)  ;; do nothing


;;-----------------------------------------------------------------------------
;; Aliases for `Symbols` and `Navigation` layers
;; Depends on PC/Mac and keyboard layout

;;(include defalias/ergol_pc.kbd)  ;; Ergo‑L PC
;; (include defalias/qwerty-lafayette_pc.kbd)  ;; Qwerty‑Lafayette PC
;; (include defalias/qwerty_pc.kbd)  ;; Qwerty / Colemak PC
;; Qwerty/Colemak Windows/Linux aliases
;; Works with QWERTY-US, Colemak and others.

;; Navigation layer
(defalias

  all C-a
  sav C-s
  cls C-w
  ndo C-z
  cut C-x
  cpy C-c
  pst C-v

  0 0
  1 1
  2 2
  3 3
  4 4
  5 5
  6 6
  7 7
  8 8
  9 9
  , ,
  . .
)

;; Symbols layer
(defalias

  ^  S-6
  <  S-,
  >  S-.
  $  S-4
  %  S-5
  @  S-2
  &  S-7
  *  S-8
  '  '
  `  `

  {  S-[
  pl S-9
  pr S-0
  }  S-]
  =  =
  \  \
  +  S-=
  -  -
  /  /
  '' S-'

  ~  S-`
  [  [
  ]  ]
  _  S--
  #  S-3
  |  S-\
  !  S-1
  ;  ;
  :  S-;
  ?  S-/
)

;; NumRow layer
(defalias

  s0 S-0
  s1 S-1
  s2 S-2
  s3 S-3
  s4 S-4
  s5 S-5
  s6 S-6
  s7 S-7
  s8 S-8
  s9 S-9
  nbs spc ;; no narrow no-break space in Qwerty

  dk1 XX
  dk2 XX
  dk3 XX
  dk4 XX
  dk5 XX
)

;; (include defalias/qwerty_mac.kbd)  ;; Qwerty / Colemak Mac
;; (include defalias/azerty_pc.kbd)  ;; Azerty PC
;; (include defalias/qwertz_pc.kbd)  ;; Qwertz PC
;; (include defalias/bepo_pc.kbd)  ;; Bépo PC
;; (include defalias/optimot_pc.kbd)  ;; Optimot PC

;;-----------------------------------------------------------------------------
;; Extra configuration
;; You should not modify this, only if you need to.


;; vim: set ft=lisp
